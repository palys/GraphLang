Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    XOR
    STRING
    COLOR
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> objects_definitions scene
Rule 2     objects_definitions -> objects_definitions object_definition
Rule 3     objects_definitions -> <empty>
Rule 4     object_definition -> DEF ID { object_body }
Rule 5     object_body -> default_color_definition ; object_body_rest
Rule 6     default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT , FLOAT )
Rule 7     object_body_rest -> shape_with_transformations object_body_rest
Rule 8     object_body_rest -> shape_with_transformations
Rule 9     object_body_rest -> shape_without_transformations object_body_rest
Rule 10    object_body_rest -> shape_without_transformations
Rule 11    shape_with_transformations -> shape ; transformation_nodes
Rule 12    shape_without_transformations -> shape ;
Rule 13    transformation_nodes -> transformation_node ; transformation_nodes
Rule 14    transformation_nodes -> transformation_node ;
Rule 15    transformation_node -> rotate_node
Rule 16    transformation_node -> translation_node
Rule 17    rotate_node -> ROTATE ( FLOAT )
Rule 18    translation_node -> TRANSLATE ( INTEGER , INTEGER )
Rule 19    shape -> primitive
Rule 20    shape -> usage
Rule 21    primitive -> rectangle
Rule 22    rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER )
Rule 23    usage -> ID
Rule 24    scene -> SCENE ( INTEGER , INTEGER ) { object_body_rest }

Terminals, with rules where they appear

(                    : 6 17 18 22 24
)                    : 6 17 18 22 24
,                    : 6 6 18 22 22 22 24
;                    : 5 11 12 13 14
AND                  : 
COLOR                : 
DEF                  : 4
DEFAULT_COLOR        : 6
FLOAT                : 6 6 6 17
ID                   : 4 23
INTEGER              : 18 18 22 22 22 22 24 24
OR                   : 
RECTANGLE            : 22
ROTATE               : 17
SCENE                : 24
STRING               : 
TRANSLATE            : 18
XOR                  : 
error                : 
{                    : 4 24
}                    : 4 24

Nonterminals, with rules where they appear

default_color_definition : 5
object_body          : 4
object_body_rest     : 5 7 9 24
object_definition    : 2
objects_definitions  : 1 2
primitive            : 19
program              : 0
rectangle            : 21
rotate_node          : 15
scene                : 1
shape                : 11 12
shape_with_transformations : 7 8
shape_without_transformations : 9 10
transformation_node  : 13 14
transformation_nodes : 11 13
translation_node     : 16
usage                : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . objects_definitions scene
    (2) objects_definitions -> . objects_definitions object_definition
    (3) objects_definitions -> .

    SCENE           reduce using rule 3 (objects_definitions -> .)
    DEF             reduce using rule 3 (objects_definitions -> .)

    program                        shift and go to state 1
    objects_definitions            shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> objects_definitions . scene
    (2) objects_definitions -> objects_definitions . object_definition
    (24) scene -> . SCENE ( INTEGER , INTEGER ) { object_body_rest }
    (4) object_definition -> . DEF ID { object_body }

    SCENE           shift and go to state 4
    DEF             shift and go to state 6

    object_definition              shift and go to state 5
    scene                          shift and go to state 3

state 3

    (1) program -> objects_definitions scene .

    $end            reduce using rule 1 (program -> objects_definitions scene .)


state 4

    (24) scene -> SCENE . ( INTEGER , INTEGER ) { object_body_rest }

    (               shift and go to state 7


state 5

    (2) objects_definitions -> objects_definitions object_definition .

    SCENE           reduce using rule 2 (objects_definitions -> objects_definitions object_definition .)
    DEF             reduce using rule 2 (objects_definitions -> objects_definitions object_definition .)


state 6

    (4) object_definition -> DEF . ID { object_body }

    ID              shift and go to state 8


state 7

    (24) scene -> SCENE ( . INTEGER , INTEGER ) { object_body_rest }

    INTEGER         shift and go to state 9


state 8

    (4) object_definition -> DEF ID . { object_body }

    {               shift and go to state 10


state 9

    (24) scene -> SCENE ( INTEGER . , INTEGER ) { object_body_rest }

    ,               shift and go to state 11


state 10

    (4) object_definition -> DEF ID { . object_body }
    (5) object_body -> . default_color_definition ; object_body_rest
    (6) default_color_definition -> . DEFAULT_COLOR ( FLOAT , FLOAT , FLOAT )

    DEFAULT_COLOR   shift and go to state 13

    default_color_definition       shift and go to state 12
    object_body                    shift and go to state 14

state 11

    (24) scene -> SCENE ( INTEGER , . INTEGER ) { object_body_rest }

    INTEGER         shift and go to state 15


state 12

    (5) object_body -> default_color_definition . ; object_body_rest

    ;               shift and go to state 16


state 13

    (6) default_color_definition -> DEFAULT_COLOR . ( FLOAT , FLOAT , FLOAT )

    (               shift and go to state 17


state 14

    (4) object_definition -> DEF ID { object_body . }

    }               shift and go to state 18


state 15

    (24) scene -> SCENE ( INTEGER , INTEGER . ) { object_body_rest }

    )               shift and go to state 19


state 16

    (5) object_body -> default_color_definition ; . object_body_rest
    (7) object_body_rest -> . shape_with_transformations object_body_rest
    (8) object_body_rest -> . shape_with_transformations
    (9) object_body_rest -> . shape_without_transformations object_body_rest
    (10) object_body_rest -> . shape_without_transformations
    (11) shape_with_transformations -> . shape ; transformation_nodes
    (12) shape_without_transformations -> . shape ;
    (19) shape -> . primitive
    (20) shape -> . usage
    (21) primitive -> . rectangle
    (23) usage -> . ID
    (22) rectangle -> . RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER )

    ID              shift and go to state 27
    RECTANGLE       shift and go to state 25

    primitive                      shift and go to state 20
    shape_without_transformations  shift and go to state 21
    object_body_rest               shift and go to state 22
    shape                          shift and go to state 23
    shape_with_transformations     shift and go to state 24
    usage                          shift and go to state 26
    rectangle                      shift and go to state 28

state 17

    (6) default_color_definition -> DEFAULT_COLOR ( . FLOAT , FLOAT , FLOAT )

    FLOAT           shift and go to state 29


state 18

    (4) object_definition -> DEF ID { object_body } .

    SCENE           reduce using rule 4 (object_definition -> DEF ID { object_body } .)
    DEF             reduce using rule 4 (object_definition -> DEF ID { object_body } .)


state 19

    (24) scene -> SCENE ( INTEGER , INTEGER ) . { object_body_rest }

    {               shift and go to state 30


state 20

    (19) shape -> primitive .

    ;               reduce using rule 19 (shape -> primitive .)


state 21

    (9) object_body_rest -> shape_without_transformations . object_body_rest
    (10) object_body_rest -> shape_without_transformations .
    (7) object_body_rest -> . shape_with_transformations object_body_rest
    (8) object_body_rest -> . shape_with_transformations
    (9) object_body_rest -> . shape_without_transformations object_body_rest
    (10) object_body_rest -> . shape_without_transformations
    (11) shape_with_transformations -> . shape ; transformation_nodes
    (12) shape_without_transformations -> . shape ;
    (19) shape -> . primitive
    (20) shape -> . usage
    (21) primitive -> . rectangle
    (23) usage -> . ID
    (22) rectangle -> . RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER )

    }               reduce using rule 10 (object_body_rest -> shape_without_transformations .)
    ID              shift and go to state 27
    RECTANGLE       shift and go to state 25

    primitive                      shift and go to state 20
    shape_without_transformations  shift and go to state 21
    object_body_rest               shift and go to state 31
    shape                          shift and go to state 23
    shape_with_transformations     shift and go to state 24
    usage                          shift and go to state 26
    rectangle                      shift and go to state 28

state 22

    (5) object_body -> default_color_definition ; object_body_rest .

    }               reduce using rule 5 (object_body -> default_color_definition ; object_body_rest .)


state 23

    (11) shape_with_transformations -> shape . ; transformation_nodes
    (12) shape_without_transformations -> shape . ;

    ;               shift and go to state 32


state 24

    (7) object_body_rest -> shape_with_transformations . object_body_rest
    (8) object_body_rest -> shape_with_transformations .
    (7) object_body_rest -> . shape_with_transformations object_body_rest
    (8) object_body_rest -> . shape_with_transformations
    (9) object_body_rest -> . shape_without_transformations object_body_rest
    (10) object_body_rest -> . shape_without_transformations
    (11) shape_with_transformations -> . shape ; transformation_nodes
    (12) shape_without_transformations -> . shape ;
    (19) shape -> . primitive
    (20) shape -> . usage
    (21) primitive -> . rectangle
    (23) usage -> . ID
    (22) rectangle -> . RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER )

    }               reduce using rule 8 (object_body_rest -> shape_with_transformations .)
    ID              shift and go to state 27
    RECTANGLE       shift and go to state 25

    primitive                      shift and go to state 20
    shape_without_transformations  shift and go to state 21
    object_body_rest               shift and go to state 33
    shape                          shift and go to state 23
    shape_with_transformations     shift and go to state 24
    usage                          shift and go to state 26
    rectangle                      shift and go to state 28

state 25

    (22) rectangle -> RECTANGLE . ( INTEGER , INTEGER , INTEGER , INTEGER )

    (               shift and go to state 34


state 26

    (20) shape -> usage .

    ;               reduce using rule 20 (shape -> usage .)


state 27

    (23) usage -> ID .

    ;               reduce using rule 23 (usage -> ID .)


state 28

    (21) primitive -> rectangle .

    ;               reduce using rule 21 (primitive -> rectangle .)


state 29

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT . , FLOAT , FLOAT )

    ,               shift and go to state 35


state 30

    (24) scene -> SCENE ( INTEGER , INTEGER ) { . object_body_rest }
    (7) object_body_rest -> . shape_with_transformations object_body_rest
    (8) object_body_rest -> . shape_with_transformations
    (9) object_body_rest -> . shape_without_transformations object_body_rest
    (10) object_body_rest -> . shape_without_transformations
    (11) shape_with_transformations -> . shape ; transformation_nodes
    (12) shape_without_transformations -> . shape ;
    (19) shape -> . primitive
    (20) shape -> . usage
    (21) primitive -> . rectangle
    (23) usage -> . ID
    (22) rectangle -> . RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER )

    ID              shift and go to state 27
    RECTANGLE       shift and go to state 25

    primitive                      shift and go to state 20
    shape_without_transformations  shift and go to state 21
    object_body_rest               shift and go to state 36
    shape                          shift and go to state 23
    shape_with_transformations     shift and go to state 24
    usage                          shift and go to state 26
    rectangle                      shift and go to state 28

state 31

    (9) object_body_rest -> shape_without_transformations object_body_rest .

    }               reduce using rule 9 (object_body_rest -> shape_without_transformations object_body_rest .)


state 32

    (11) shape_with_transformations -> shape ; . transformation_nodes
    (12) shape_without_transformations -> shape ; .
    (13) transformation_nodes -> . transformation_node ; transformation_nodes
    (14) transformation_nodes -> . transformation_node ;
    (15) transformation_node -> . rotate_node
    (16) transformation_node -> . translation_node
    (17) rotate_node -> . ROTATE ( FLOAT )
    (18) translation_node -> . TRANSLATE ( INTEGER , INTEGER )

    ID              reduce using rule 12 (shape_without_transformations -> shape ; .)
    RECTANGLE       reduce using rule 12 (shape_without_transformations -> shape ; .)
    }               reduce using rule 12 (shape_without_transformations -> shape ; .)
    ROTATE          shift and go to state 37
    TRANSLATE       shift and go to state 41

    translation_node               shift and go to state 39
    transformation_nodes           shift and go to state 38
    rotate_node                    shift and go to state 42
    transformation_node            shift and go to state 40

state 33

    (7) object_body_rest -> shape_with_transformations object_body_rest .

    }               reduce using rule 7 (object_body_rest -> shape_with_transformations object_body_rest .)


state 34

    (22) rectangle -> RECTANGLE ( . INTEGER , INTEGER , INTEGER , INTEGER )

    INTEGER         shift and go to state 43


state 35

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT , . FLOAT , FLOAT )

    FLOAT           shift and go to state 44


state 36

    (24) scene -> SCENE ( INTEGER , INTEGER ) { object_body_rest . }

    }               shift and go to state 45


state 37

    (17) rotate_node -> ROTATE . ( FLOAT )

    (               shift and go to state 46


state 38

    (11) shape_with_transformations -> shape ; transformation_nodes .

    ID              reduce using rule 11 (shape_with_transformations -> shape ; transformation_nodes .)
    RECTANGLE       reduce using rule 11 (shape_with_transformations -> shape ; transformation_nodes .)
    }               reduce using rule 11 (shape_with_transformations -> shape ; transformation_nodes .)


state 39

    (16) transformation_node -> translation_node .

    ;               reduce using rule 16 (transformation_node -> translation_node .)


state 40

    (13) transformation_nodes -> transformation_node . ; transformation_nodes
    (14) transformation_nodes -> transformation_node . ;

    ;               shift and go to state 47


state 41

    (18) translation_node -> TRANSLATE . ( INTEGER , INTEGER )

    (               shift and go to state 48


state 42

    (15) transformation_node -> rotate_node .

    ;               reduce using rule 15 (transformation_node -> rotate_node .)


state 43

    (22) rectangle -> RECTANGLE ( INTEGER . , INTEGER , INTEGER , INTEGER )

    ,               shift and go to state 49


state 44

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT . , FLOAT )

    ,               shift and go to state 50


state 45

    (24) scene -> SCENE ( INTEGER , INTEGER ) { object_body_rest } .

    $end            reduce using rule 24 (scene -> SCENE ( INTEGER , INTEGER ) { object_body_rest } .)


state 46

    (17) rotate_node -> ROTATE ( . FLOAT )

    FLOAT           shift and go to state 51


state 47

    (13) transformation_nodes -> transformation_node ; . transformation_nodes
    (14) transformation_nodes -> transformation_node ; .
    (13) transformation_nodes -> . transformation_node ; transformation_nodes
    (14) transformation_nodes -> . transformation_node ;
    (15) transformation_node -> . rotate_node
    (16) transformation_node -> . translation_node
    (17) rotate_node -> . ROTATE ( FLOAT )
    (18) translation_node -> . TRANSLATE ( INTEGER , INTEGER )

    ID              reduce using rule 14 (transformation_nodes -> transformation_node ; .)
    RECTANGLE       reduce using rule 14 (transformation_nodes -> transformation_node ; .)
    }               reduce using rule 14 (transformation_nodes -> transformation_node ; .)
    ROTATE          shift and go to state 37
    TRANSLATE       shift and go to state 41

    translation_node               shift and go to state 39
    transformation_node            shift and go to state 40
    rotate_node                    shift and go to state 42
    transformation_nodes           shift and go to state 52

state 48

    (18) translation_node -> TRANSLATE ( . INTEGER , INTEGER )

    INTEGER         shift and go to state 53


state 49

    (22) rectangle -> RECTANGLE ( INTEGER , . INTEGER , INTEGER , INTEGER )

    INTEGER         shift and go to state 54


state 50

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT , . FLOAT )

    FLOAT           shift and go to state 55


state 51

    (17) rotate_node -> ROTATE ( FLOAT . )

    )               shift and go to state 56


state 52

    (13) transformation_nodes -> transformation_node ; transformation_nodes .

    ID              reduce using rule 13 (transformation_nodes -> transformation_node ; transformation_nodes .)
    RECTANGLE       reduce using rule 13 (transformation_nodes -> transformation_node ; transformation_nodes .)
    }               reduce using rule 13 (transformation_nodes -> transformation_node ; transformation_nodes .)


state 53

    (18) translation_node -> TRANSLATE ( INTEGER . , INTEGER )

    ,               shift and go to state 57


state 54

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER . , INTEGER , INTEGER )

    ,               shift and go to state 58


state 55

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT , FLOAT . )

    )               shift and go to state 59


state 56

    (17) rotate_node -> ROTATE ( FLOAT ) .

    ;               reduce using rule 17 (rotate_node -> ROTATE ( FLOAT ) .)


state 57

    (18) translation_node -> TRANSLATE ( INTEGER , . INTEGER )

    INTEGER         shift and go to state 60


state 58

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER , . INTEGER , INTEGER )

    INTEGER         shift and go to state 61


state 59

    (6) default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT , FLOAT ) .

    ;               reduce using rule 6 (default_color_definition -> DEFAULT_COLOR ( FLOAT , FLOAT , FLOAT ) .)


state 60

    (18) translation_node -> TRANSLATE ( INTEGER , INTEGER . )

    )               shift and go to state 62


state 61

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER . , INTEGER )

    ,               shift and go to state 63


state 62

    (18) translation_node -> TRANSLATE ( INTEGER , INTEGER ) .

    ;               reduce using rule 18 (translation_node -> TRANSLATE ( INTEGER , INTEGER ) .)


state 63

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER , . INTEGER )

    INTEGER         shift and go to state 64


state 64

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER . )

    )               shift and go to state 65


state 65

    (22) rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER ) .

    ;               reduce using rule 22 (rectangle -> RECTANGLE ( INTEGER , INTEGER , INTEGER , INTEGER ) .)

